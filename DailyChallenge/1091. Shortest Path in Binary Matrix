class Solution:
    def shortestPathBinaryMatrix(self, grid: List[List[int]]) -> int:
        M,N = len(grid),len(grid[0])
        if grid[0][0] == 1 or grid[M-1][N-1] == 1:
            return -1
        steps = 1
        front = [[0,0]]
        grid[0][0] = 1
        while front:
            new_front = []
            for x,y in front:
                if x == N-1 and y == M-1:
                    return steps
                for dx,dy in [[1,0],[0,1],[-1,0],[0,-1],[1,1],[-1,-1],[1,-1],[-1,1]]:
                    x2,y2 = dx+x,dy+y
                    if M > y2 >= 0 and N > x2 >= 0 and grid[y2][x2] == 0:
                        new_front.append([x2,y2])
                        grid[y2][x2] = 1
            front = new_front
            steps += 1
        return -1